/* tslint:disable */
/* eslint-disable */
/**
 * Waiting List Api
 * Porodnica Waiting List management for Web-In-Cloud system
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xsmutny@stuba.sk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  WaitingListEntry,
} from '../models';
import {
    WaitingListEntryFromJSON,
} from '../models';

export interface GetWaitingListEntriesRequest {
    porodnicaId: string;
}

/**
 * PorodnicaWaitingListApi - interface
 * 
 * @export
 * @interface PorodnicaWaitingListApiInterface
 */
export interface PorodnicaWaitingListApiInterface {
    /**
     * By using porodnicaId you get list of entries in porodnica waiting list
     * @summary Provides the porodnica waiting list
     * @param {string} porodnicaId pass the id of the particular porodnica
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PorodnicaWaitingListApiInterface
     */
    getWaitingListEntriesRaw(requestParameters: GetWaitingListEntriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<WaitingListEntry>>>;

    /**
     * By using porodnicaId you get list of entries in porodnica waiting list
     * Provides the porodnica waiting list
     */
    getWaitingListEntries(requestParameters: GetWaitingListEntriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<WaitingListEntry>>;

}

/**
 * 
 */
export class PorodnicaWaitingListApi extends runtime.BaseAPI implements PorodnicaWaitingListApiInterface {

    /**
     * By using porodnicaId you get list of entries in porodnica waiting list
     * Provides the porodnica waiting list
     */
    async getWaitingListEntriesRaw(requestParameters: GetWaitingListEntriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<WaitingListEntry>>> {
        if (requestParameters.porodnicaId === null || requestParameters.porodnicaId === undefined) {
            throw new runtime.RequiredError('porodnicaId','Required parameter requestParameters.porodnicaId was null or undefined when calling getWaitingListEntries.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/waiting-list/{porodnicaId}/entries`.replace(`{${"porodnicaId"}}`, encodeURIComponent(String(requestParameters.porodnicaId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(WaitingListEntryFromJSON));
    }

    /**
     * By using porodnicaId you get list of entries in porodnica waiting list
     * Provides the porodnica waiting list
     */
    async getWaitingListEntries(requestParameters: GetWaitingListEntriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<WaitingListEntry>> {
        const response = await this.getWaitingListEntriesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
