/* tslint:disable */
/* eslint-disable */
/**
 * Waiting List Api
 * Porodnica Waiting List management for Web-In-Cloud system
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xsmutny@stuba.sk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WaitingListEntry
 */
export interface WaitingListEntry {
    /**
     * Unique id of the entry in this waiting list
     * @type {string}
     * @memberof WaitingListEntry
     */
    id: string;
    /**
     * Name of patient in waiting list
     * @type {string}
     * @memberof WaitingListEntry
     */
    name?: string;
    /**
     * Unique identifier of the patient known to Web-In-Cloud system
     * @type {string}
     * @memberof WaitingListEntry
     */
    patientId: string;
    /**
     * Timestamp since when the patient entered the porodnica waiting list
     * @type {Date}
     * @memberof WaitingListEntry
     */
    waitingSince: Date;
    /**
     * Estimated time of porod. Ignored on post.
     * @type {Date}
     * @memberof WaitingListEntry
     */
    estimatedLaborDate?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof WaitingListEntry
     */
    gaveBirth?: boolean;
}

/**
 * Check if a given object implements the WaitingListEntry interface.
 */
export function instanceOfWaitingListEntry(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "patientId" in value;
    isInstance = isInstance && "waitingSince" in value;

    return isInstance;
}

export function WaitingListEntryFromJSON(json: any): WaitingListEntry {
    return WaitingListEntryFromJSONTyped(json, false);
}

export function WaitingListEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): WaitingListEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'patientId': json['patientId'],
        'waitingSince': (new Date(json['waitingSince'])),
        'estimatedLaborDate': !exists(json, 'estimatedLaborDate') ? undefined : (new Date(json['estimatedLaborDate'])),
        'gaveBirth': !exists(json, 'gaveBirth') ? undefined : json['gaveBirth'],
    };
}

export function WaitingListEntryToJSON(value?: WaitingListEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'patientId': value.patientId,
        'waitingSince': (value.waitingSince.toISOString()),
        'estimatedLaborDate': value.estimatedLaborDate === undefined ? undefined : (value.estimatedLaborDate.toISOString()),
        'gaveBirth': value.gaveBirth,
    };
}

